#N canvas 201 155 638 589 10;
#X obj 2 47 cnv 15 400 230 empty empty 2.serial_connection 12 12 0
10 -233017 -66577 0;
#X msg 46 143 close;
#X msg 56 171 info;
#X msg 17 69 devices;
#X text 90 171 <- info for current connection;
#X msg 59 192 version;
#N canvas 165 527 470 222 ver 0;
#X obj 250 100 cnv 15 145 17 empty \$0-version_cnv empty 4 10 0 12
-232576 -1 0;
#X obj 23 202 send \$0-version_cnv;
#X msg 23 177 label \$1;
#X obj 48 148 symbol;
#X obj 38 122 loadbang;
#X msg 96 123 bang;
#X msg 23 94 symbol firmata_version_\$1_\$2;
#X obj 23 72 list;
#X obj 23 6 receive \$0-arduino-info;
#X msg 98 71 symbol connection_closed;
#X obj 98 50 route -1;
#X obj 23 29 route version;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 2 0;
#X connect 7 0 6 0;
#X connect 8 0 11 0;
#X connect 9 0 2 0;
#X connect 10 0 9 0;
#X connect 11 0 7 0;
#X connect 11 1 10 0;
#X coords 0 -1 1 1 145 17 1 250 100;
#X restore 126 246 pd ver;
#X text 111 192 <- get protocol version;
#X text 111 215 <- get firmware version;
#X msg 59 215 firmware;
#X text 84 121 select the serial port;
#X text 86 141 close the serial port;
#X msg 29 123 open \$1;
#X floatatom 29 96 5 0 0 0 - - -;
#X text 85 103 listed by the 'device' message above;
#X obj 14 243 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 17 247 send \$0-arduino;
#X text 84 88 enter the number of your serial device;
#X text 67 94 <-;
#X obj 2 280 cnv 15 400 300 empty empty 3.pin_settings 12 12 0 10 -233017
-66577 0;
#N canvas 31 83 447 555 DIGITAL-OUTPUT 0;
#X text 72 97 I/O the individual pins:;
#X obj 40 194 cnv 15 100 22 empty empty empty 20 12 0 14 -203904 -66577
0;
#X msg 49 197 digital 7 1;
#X obj 168 134 tgl 15 0 empty empty 7 4 -6 1 12 -233017 -1 -1 0 1;
#X obj 185 134 tgl 15 0 empty empty 8 4 -6 1 12 -233017 -1 -1 0 1;
#X obj 202 134 tgl 15 0 empty empty 9 4 -6 1 12 -233017 -1 -1 0 1;
#X obj 219 134 tgl 15 0 empty empty 10 0 -6 1 12 -233017 -1 -1 0 1
;
#X obj 236 134 tgl 15 0 empty empty 11 0 -6 1 12 -233017 -1 -1 0 1
;
#X obj 253 134 tgl 15 0 empty empty 12 0 -6 1 12 -233017 -1 -1 0 1
;
#X obj 270 134 tgl 15 0 empty empty 13 0 -6 1 12 -233017 -1 -1 0 1
;
#X obj 83 134 tgl 15 0 empty empty 2 4 -6 1 12 -233017 -1 -1 0 1;
#X obj 100 134 tgl 15 0 empty empty 3 4 -6 1 12 -233017 -1 -1 0 1;
#X obj 117 134 tgl 15 0 empty empty 5 4 -6 1 12 -233017 -1 -1 0 1;
#X obj 134 134 tgl 15 0 empty empty 6 4 -6 1 12 -233017 -1 -1 0 1;
#X obj 151 134 tgl 15 0 empty empty 6 4 -6 1 12 -233017 -1 -1 0 1;
#N canvas 471 328 810 360 generate 0;
#X obj 49 24 inlet;
#X obj 89 24 inlet;
#X obj 128 24 inlet;
#X obj 168 24 inlet;
#X obj 208 24 inlet;
#X obj 248 24 inlet;
#X obj 287 24 inlet;
#X obj 327 24 inlet;
#X obj 368 23 inlet;
#X obj 408 23 inlet;
#X obj 447 23 inlet;
#X obj 487 23 inlet;
#X obj 527 23 inlet;
#X msg 49 66 digital 0 \$1;
#X msg 89 88 digital 1 \$1;
#X msg 128 110 digital 2 \$1;
#X msg 168 130 digital 3 \$1;
#X msg 208 62 digital 4 \$1;
#X msg 248 84 digital 5 \$1;
#X msg 287 106 digital 6 \$1;
#X msg 327 126 digital 7 \$1;
#X msg 368 58 digital 8 \$1;
#X msg 408 80 digital 9 \$1;
#X msg 447 102 digital 10 \$1;
#X msg 487 122 digital 11 \$1;
#X msg 527 50 digital 12 \$1;
#X obj 566 23 inlet;
#X msg 566 70 digital 13 \$1;
#X obj 305 264 outlet;
#X obj 305 237 trigger bang anything;
#X obj 305 196 list prepend set;
#X obj 305 216 list trim;
#X connect 0 0 13 0;
#X connect 1 0 14 0;
#X connect 2 0 15 0;
#X connect 3 0 16 0;
#X connect 4 0 17 0;
#X connect 5 0 18 0;
#X connect 6 0 19 0;
#X connect 7 0 20 0;
#X connect 8 0 21 0;
#X connect 9 0 22 0;
#X connect 10 0 23 0;
#X connect 11 0 24 0;
#X connect 12 0 25 0;
#X connect 13 0 30 0;
#X connect 14 0 30 0;
#X connect 15 0 30 0;
#X connect 16 0 30 0;
#X connect 17 0 30 0;
#X connect 18 0 30 0;
#X connect 19 0 30 0;
#X connect 20 0 30 0;
#X connect 21 0 30 0;
#X connect 22 0 30 0;
#X connect 23 0 30 0;
#X connect 24 0 30 0;
#X connect 25 0 30 0;
#X connect 26 0 27 0;
#X connect 27 0 30 0;
#X connect 29 0 28 0;
#X connect 29 1 28 0;
#X connect 30 0 31 0;
#X connect 31 0 29 0;
#X restore 49 158 pd generate digital out messages;
#X obj 319 109 tgl 25 0 empty empty ALL 2 12 0 12 -262144 -1 -1 0 1
;
#X obj 319 70 tgl 15 0 empty empty empty 0 -6 0 8 -232576 -1 -1 0 16383
;
#X obj 319 88 metro 100;
#X text 143 197 <-- this is the message format;
#X text 181 69 strobe all pins -->;
#X obj 49 134 tgl 15 0 empty empty 0 3 -6 1 12 -260818 -1 -1 0 1;
#X obj 66 134 tgl 15 0 empty empty 1 3 -6 1 12 -260818 -1 -1 0 1;
#X obj 49 134 cnv 15 15 15 empty empty Rx 1 10 0 11 -128992 -86277
0;
#X obj 66 134 cnv 15 15 15 empty empty Tx 1 10 0 11 -128992 -13381
0;
#X text 38 311 You can also send digital messages 8-bits at a time
\, called a "port". Microcontrollers like the Arduino are organized
around 8-bit ports. This allows you to set 8 pins at the same time
with one message;
#X msg 267 392 port 1 0;
#X msg 123 391 port 0 0;
#X msg 49 391 port 0 255;
#X msg 193 392 port 1 255;
#X obj 45 275 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 49 280 send \$0-arduino;
#X obj 46 506 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 49 510 send \$0-arduino;
#X obj 49 24 cnv 15 350 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 50 22 NOTE: don't forget to set pins to output mode first!
;
#X connect 2 0 31 0;
#X connect 3 0 15 7;
#X connect 4 0 15 8;
#X connect 5 0 15 9;
#X connect 6 0 15 10;
#X connect 7 0 15 11;
#X connect 8 0 15 12;
#X connect 9 0 15 13;
#X connect 10 0 15 2;
#X connect 11 0 15 3;
#X connect 12 0 15 4;
#X connect 13 0 15 5;
#X connect 14 0 15 6;
#X connect 15 0 2 0;
#X connect 16 0 9 0;
#X connect 16 0 8 0;
#X connect 16 0 7 0;
#X connect 16 0 6 0;
#X connect 16 0 5 0;
#X connect 16 0 4 0;
#X connect 16 0 3 0;
#X connect 16 0 14 0;
#X connect 16 0 13 0;
#X connect 16 0 12 0;
#X connect 16 0 11 0;
#X connect 16 0 10 0;
#X connect 17 0 18 0;
#X connect 18 0 16 0;
#X connect 26 0 33 0;
#X connect 27 0 33 0;
#X connect 28 0 33 0;
#X connect 29 0 33 0;
#X restore 32 397 pd DIGITAL-OUTPUT;
#N canvas 14 501 578 280 DIGITAL-INPUT 0;
#X text 387 93 connect the Digital Input;
#X text 387 110 to the ground (=0) or to;
#X text 387 127 the positive voltage (=1);
#X text 113 185 NOTE: if you don't connect your pin neither to + nor
to the ground \, you will get random values (0 or 1) - to avoid that
\, you could connect all the pins to the ground !;
#X obj 114 89 route digital;
#X obj 114 112 route 0 1 2 3 4 5 6 7 8 9 10 11 12 13;
#X obj 145 134 tgl 15 0 empty empty 2 4 23 1 12 -232448 -1 -1 0 1;
#X obj 162 134 tgl 15 0 empty empty 3 4 23 1 12 -232448 -1 -1 0 1;
#X obj 179 134 tgl 15 0 empty empty 4 4 23 1 12 -232448 -1 -1 0 1;
#X obj 196 134 tgl 15 0 empty empty 5 4 23 1 12 -232448 -1 -1 0 1;
#X obj 213 134 tgl 15 0 empty empty 6 4 23 1 12 -232448 -1 -1 0 1;
#X obj 230 134 tgl 15 0 empty empty 7 4 23 1 12 -232448 -1 -1 0 1;
#X obj 247 134 tgl 15 0 empty empty 8 4 23 1 12 -232448 -1 -1 0 1;
#X obj 264 134 tgl 15 0 empty empty 9 4 23 1 12 -232448 -1 -1 0 1;
#X obj 281 134 tgl 15 0 empty empty 10 0 23 1 12 -232448 -1 -1 0 1
;
#X obj 298 134 tgl 15 0 empty empty 11 0 23 1 12 -232448 -1 -1 0 1
;
#X obj 315 134 tgl 15 0 empty empty 12 0 23 1 12 -232448 -1 -1 0 1
;
#X obj 332 134 tgl 15 0 empty empty 13 0 23 1 12 -232448 -1 -1 0 1
;
#X obj 111 134 tgl 15 0 empty empty 0 4 23 1 12 -232448 -1 -1 0 1;
#X obj 128 134 tgl 15 0 empty empty 1 4 23 1 12 -232448 -1 -1 0 1;
#X obj 111 134 cnv 15 15 15 empty empty Rx 1 10 0 11 -128992 -86277
0;
#X obj 128 134 cnv 15 15 15 empty empty Tx 1 10 0 11 -128992 -13381
0;
#X text 12 134 (serial port)->;
#X obj 110 60 cnv 15 110 26 empty empty empty 20 12 0 14 -159808 -66577
0;
#X obj 114 64 r \$0-arduino-out;
#X obj 108 35 cnv 15 350 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 110 33 NOTE: don't forget to set pins to input mode first!
;
#X connect 4 0 5 0;
#X connect 5 2 6 0;
#X connect 5 3 7 0;
#X connect 5 4 8 0;
#X connect 5 5 9 0;
#X connect 5 6 10 0;
#X connect 5 7 11 0;
#X connect 5 8 12 0;
#X connect 5 9 13 0;
#X connect 5 10 14 0;
#X connect 5 11 15 0;
#X connect 5 12 16 0;
#X connect 5 13 17 0;
#X connect 24 0 4 0;
#X restore 38 378 pd DIGITAL-INPUT;
#N canvas 303 503 441 343 ANALOG-INPUT 0;
#X obj 121 108 spigot 0;
#X obj 183 105 tgl 20 0 empty empty empty 0 -6 0 8 -258699 -1 -1 0
1;
#X text 30 24 Analog Inputs of the Arduino-Board:;
#X text 211 107 <- enable analog inputs;
#X text 25 283 NOTE: connect the analog pins that you don't use to
the ground \, if you want to avoid flickering of the values !;
#X floatatom 22 226 5 0 0 3 a0 - -;
#X floatatom 68 226 5 0 0 3 a1 - -;
#X floatatom 114 226 5 0 0 3 a2 - -;
#X floatatom 160 226 5 0 0 3 a3 - -;
#X floatatom 206 226 5 0 0 3 a4 - -;
#X floatatom 252 226 5 0 0 3 a5 - -;
#X floatatom 298 226 5 0 0 3 a6 - -;
#X floatatom 344 226 5 0 0 3 a7 - -;
#X obj 121 147 route analog;
#X obj 121 169 route 0 1 2 3 4 5 6 7;
#N canvas 0 76 499 396 display 0;
#X obj 21 7 inlet;
#X obj 6 50 outlet;
#X obj 69 50 inlet;
#X obj 54 93 outlet;
#X obj 118 93 inlet;
#X obj 103 136 outlet;
#X obj 166 136 inlet;
#X obj 151 179 outlet;
#X obj 215 179 inlet;
#X obj 200 222 outlet;
#X obj 262 222 inlet;
#X obj 247 265 outlet;
#X obj 310 265 inlet;
#X obj 295 308 outlet;
#X obj 360 308 inlet;
#X obj 345 351 outlet;
#X obj 6 28 f;
#X obj 54 71 f;
#X obj 103 114 f;
#X obj 151 157 f;
#X obj 200 200 f;
#X obj 247 244 f;
#X obj 295 286 f;
#X obj 345 329 f;
#X obj 56 246 loadbang;
#X obj 56 268 metro 100;
#X obj 56 305 t b b b b b b b b;
#X connect 0 0 16 1;
#X connect 2 0 17 1;
#X connect 4 0 18 1;
#X connect 6 0 19 1;
#X connect 8 0 20 1;
#X connect 10 0 21 1;
#X connect 12 0 22 1;
#X connect 14 0 23 1;
#X connect 16 0 1 0;
#X connect 17 0 3 0;
#X connect 18 0 5 0;
#X connect 19 0 7 0;
#X connect 20 0 9 0;
#X connect 21 0 11 0;
#X connect 22 0 13 0;
#X connect 23 0 15 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 16 0;
#X connect 26 1 17 0;
#X connect 26 2 18 0;
#X connect 26 3 19 0;
#X connect 26 4 20 0;
#X connect 26 5 21 0;
#X connect 26 6 22 0;
#X connect 26 7 23 0;
#X restore 45 200 pd display values without pegging the CPU;
#X obj 116 66 cnv 15 110 26 empty empty empty 20 12 0 14 -159808 -66577
0;
#X obj 121 70 r \$0-arduino-out;
#X connect 0 0 13 0;
#X connect 1 0 0 1;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 14 1 15 1;
#X connect 14 2 15 2;
#X connect 14 3 15 3;
#X connect 14 4 15 4;
#X connect 14 5 15 5;
#X connect 14 6 15 6;
#X connect 14 7 15 7;
#X connect 15 0 5 0;
#X connect 15 1 6 0;
#X connect 15 2 7 0;
#X connect 15 3 8 0;
#X connect 15 4 9 0;
#X connect 15 5 10 0;
#X connect 15 6 11 0;
#X connect 15 7 12 0;
#X connect 17 0 0 0;
#X restore 43 436 pd ANALOG-INPUT;
#N canvas 99 372 562 378 ANALOG-OUTPUT-PWM 0;
#X text 16 17 Analog Output \, PWM (Pulse Width Modulation);
#X msg 21 189 pwm 9 \$1;
#X obj 24 168 hsl 150 17 0 1 0 0 empty empty PWM_control_(0-1) -2 -6
1 10 -232576 -1 -1 0 1;
#X text 29 215 disable PWM:;
#X obj 192 168 hsl 150 17 0 1 0 0 empty empty PWM_control_(0-1) -2
-6 1 10 -232576 -1 -1 0 1;
#X text 197 215 disable PWM:;
#X obj 354 168 hsl 150 17 0 1 0 0 empty empty PWM_control_(0-1) -2
-6 1 10 -232576 -1 -1 0 1;
#X text 359 215 disable PWM:;
#X text 21 133 PIN9:;
#X text 189 135 PIN10:;
#X text 351 135 PIN11:;
#X msg 189 189 pwm 10 \$1;
#X msg 351 189 pwm 11 \$1;
#X text 21 319 NOTE: it is possible to write as well on the other pins
to send software-PWM signals (will come soon ...);
#X msg 31 234 pwm 9 0;
#X msg 199 234 pwm 10 0;
#X msg 361 234 pwm 11 0;
#X text 16 53 With the help of PWM you can write analog values to the
PWM pins of your Arduino board.;
#X obj 17 255 cnv 15 85 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 21 258 s \$0-arduino;
#X obj 184 255 cnv 15 85 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 189 258 s \$0-arduino;
#X obj 346 255 cnv 15 85 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 351 258 s \$0-arduino;
#X obj 17 91 cnv 15 350 15 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 17 89 NOTE: don't forget to set the pins to 'pwm' mode first
!;
#X connect 1 0 19 0;
#X connect 2 0 1 0;
#X connect 4 0 11 0;
#X connect 6 0 12 0;
#X connect 11 0 21 0;
#X connect 12 0 23 0;
#X connect 14 0 19 0;
#X connect 15 0 21 0;
#X connect 16 0 23 0;
#X restore 13 455 pd ANALOG-OUTPUT-PWM;
#X text 14 301 With the Arduino-Board you can do digital and analog
input and output \, as descriped in the following sub-patches:;
#X text 144 394 <- example of Digital Output;
#X text 143 377 <- example of Digital Input;
#X text 143 454 <- example of Analog Output;
#N canvas 0 76 436 343 GETTING-INFO 0;
#X msg 147 65 version;
#X msg 207 65 info;
#X obj 146 177 route version;
#X floatatom 146 245 5 0 0 0 - - -;
#X floatatom 251 245 5 0 0 0 - - -;
#X obj 146 221 unpack float float;
#X obj 144 103 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 147 107 send \$0-arduino;
#X obj 142 141 cnv 15 145 26 empty empty empty 20 12 0 14 -159808 -66577
0;
#X obj 146 146 receive \$0-arduino-out;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 5 0;
#X connect 5 0 3 0;
#X connect 5 1 4 0;
#X connect 9 0 2 0;
#X restore 43 514 pd GETTING-INFO;
#X text 143 513 <- example of getting status data;
#N canvas 23 251 432 341 SERVO 0;
#X obj 52 224 hsl 150 17 0 1 0 0 empty empty Servo_control_(0-1) -2
-6 1 10 -232576 -1 -1 0 1;
#X text 27 141 disable PWM:;
#X obj 260 224 hsl 150 17 0 1 0 0 empty empty Servo_control_(0-1) -2
-6 1 10 -232576 -1 -1 0 1;
#X text 235 141 disable PWM:;
#X text 19 119 PIN9:;
#X text 227 121 PIN10:;
#X text 14 13 Servo control;
#X msg 49 245 analog 9 \$1;
#X msg 257 245 analog 10 \$1;
#X msg 29 160 pinMode 9 servo;
#X msg 237 160 pinMode 10 servo;
#X text 15 40 You can control servo motors using Pd. First \, set the
pin to servo mode using the pinMode message \, then send analog values
to that pin with a range between 0 and 1 0 will set the position to
one extreme \, and 1 to the other.;
#X obj 252 270 cnv 15 85 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 257 274 s \$0-arduino;
#X obj 44 270 cnv 15 85 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 49 274 s \$0-arduino;
#X connect 0 0 7 0;
#X connect 2 0 8 0;
#X connect 7 0 15 0;
#X connect 8 0 13 0;
#X connect 9 0 15 0;
#X connect 10 0 13 0;
#X restore 85 474 pd SERVO;
#X text 143 473 <- example of Servo control;
#N canvas 448 515 332 194 PULLUP/DOWN 0;
#X obj 25 89 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 28 92 send \$0-arduino;
#X msg 28 25 digital 7 0;
#X text 119 23 pulldown on pin7;
#X msg 38 56 digital 7 1;
#X text 120 53 pullup on pin7;
#X connect 2 0 1 0;
#X connect 4 0 1 0;
#X restore 48 541 pd PULLUP/DOWN;
#X obj 405 47 cnv 15 230 230 empty empty arduino_object 12 12 0 10
-233017 -66577 0;
#X obj 405 280 cnv 15 230 200 empty empty example 12 12 0 10 -233017
-66577 0;
#X text 423 497 2006 \, released under GNU GPL \; Gerda Strobl \, Georg
Holzmann;
#X text 424 529 slight cosmetics in 2011 by;
#X msg 440 413 digital 13 \$1;
#X obj 440 395 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0
1;
#X msg 419 356 pinMode 13 output;
#X obj 416 433 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 419 436 send \$0-arduino;
#X text 416 321 the pins for digital IO:;
#X text 456 392 <- toggle pin 13 on and off;
#X text 544 358 output mode;
#X text 543 346 set pin 13 to;
#X text 527 353 <-;
#X text 415 305 Example to set input/output mode of;
#X obj 418 131 arduino 1;
#X obj 469 181 send \$0-arduino-info;
#X obj 477 161 print INFO;
#X obj 414 76 cnv 15 120 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 418 82 receive \$0-arduino;
#X obj 414 201 cnv 15 125 26 empty empty empty 20 12 0 14 -159808 -66577
0;
#X obj 418 205 send \$0-arduino-out;
#X text 496 114 here's our;
#X text 495 128 Arduino object;
#X text 479 130 <-;
#X text 143 538 <- example of setting pins into;
#X text 161 552 pullup/down state;
#X obj 2 -6 cnv 15 633 50 empty empty 1.Installation 12 10 0 10 -233017
-66577 0;
#X text 253 20 Arduino Interface For PD;
#X text 280 5 ::::_PDUINO_::::;
#X obj 9 12 cnv 15 230 30 empty empty empty 20 12 0 14 -261234 -66577
0;
#N canvas 706 129 445 342 INSTALL-NOTES 0;
#X text 20 27 1 General information on arduino: http://www.arduino.cc
;
#X text 20 113 3 The StandardFirmata firmware is the best place to
start.;
#X text 21 146 4 Pduino needs the following abstraction:;
#X text 21 193 5 Pduino needs the following externals:;
#X text 23 248 6 If you still have troubles \, mail to the pd list
!;
#X text 39 164 [arduino] \, from pd-svn/externals/hardware/arduino
;
#X text 39 210 [comport] \, from pd-svn/externals/iem/comport;
#X text 39 224 [moocow] \, from pd-svn/externals/moocow;
#X text 20 48 2 You need to install a Firmata firmware. There are a
;
#X text 38 62 bunch of Firmata firmwares included with Arduino. Use
Firmata >=2.1 (included in Arduino 18 or newer) for best results.;
#X text 21 273 pd-svn: https://pure-data.svn.sourceforge.net/svnroot/pure-data/trunk/
;
#X restore 14 18 pd INSTALL-NOTES;
#X text 119 16 <- read this first;
#N canvas 147 357 559 381 ADDITIONAL-INFOS 0;
#X text 58 326 http://answers.ros.org/answers/101/revisions/;
#X text 68 170 $ udevadm control u2013reload-rules;
#X text 72 90 $ echo 'SUBSYSTEMS=="usb" \, KERNEL=="ttyUSB[0-9]*" \,
ATTRSidVendor=="0403" \, ATTRSidProduct=="6001" \, SYMLINK+="arduino/ftdi_%sserial"'
> /etc/udev/rules.d/52-ftdi.rules;
#X msg 73 254 open /dev/arduino/ftdi_A9005eBF;
#X text 72 231 your open message then looks f.e. like this:;
#X obj 73 285 arduino;
#X text 54 155 2 reload your udev rules:;
#X obj 47 25 cnv 15 430 45 empty empty empty 20 12 0 14 -261234 -66577
0;
#X text 51 72 1 execute this command as root:;
#X text 53 196 3 you should get a unique symlink of your device in
/dev/arduino/ftdi_yourserialddress.;
#X text 58 313 info source:;
#X text 52 26 how to make shure that various arduinos plugged into
one Linux-system are always connected to the same arduino object after
unplugging/reboot:;
#X connect 3 0 5 0;
#X restore 463 13 pd ADDITIONAL-INFOS;
#X text 425 543 Roman Haefeli and Olsen;
#X text 407 238 NOTE:the [arduino]object is placed as;
#X text 407 252 an abstraction in your project folder;
#X text 70 70 <- list devices -> check the pd-console output!;
#X text 142 436 <- example of Analog Input;
#X obj 68 333 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#N canvas 146 28 397 665 PINMODE 0;
#X text 19 5 Before you can send or receive any data from the Arduino
\, you need to configure the pins using the pinMode message. The message
has the format [pinMode pin# mode(. You can use either numbers or names
for the pin modes:;
#X msg 98 561 pinMode 10 3;
#X msg 76 153 pinMode 10 1;
#X msg 76 129 pinMode 10 0;
#X msg 98 581 pinMode 10 4;
#X text 184 127 ==;
#X text 183 152 ==;
#X text 188 395 ==;
#X text 206 561 ==;
#X text 206 581 ==;
#X msg 227 129 pinMode 10 input;
#X msg 226 154 pinMode 10 output;
#X msg 247 561 pinMode 10 pwm;
#X msg 247 581 pinMode 10 servo;
#X obj 184 620 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 187 623 send \$0-arduino;
#X obj 9 70 cnv 15 380 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 14 76 PinMode for Digital Pins:;
#X obj 10 255 cnv 15 380 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 15 261 PinMode for Analog Pins:;
#X obj 11 505 cnv 15 380 30 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 16 511 PinMode for PWM & Servo Pins:;
#X obj 176 187 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 179 190 send \$0-arduino;
#X msg 81 397 pinMode 16 2;
#X obj 184 448 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 187 451 send \$0-arduino;
#X msg 227 398 pinMode 16 analog;
#N canvas 432 166 450 241 old 0;
#X msg 57 130 digitalIns 0 0;
#X text 56 93 which digital ports to enable:;
#N canvas 162 133 610 460 seri 0;
#X obj 59 337 outlet;
#X obj 59 266 trigger bang anything;
#X obj 201 286 list;
#X obj 60 61 tgl 15 0 junk_to_hide_inlet ARDUINO_TEST_RESET 0 5 9 1
12 -260736 -1 -1 0 1;
#X obj 75 61 tgl 15 0 junk_to_hide_inlet ARDUINO_TEST_RESET 1 5 9 1
12 -260736 -1 -1 0 1;
#X obj 90 61 tgl 15 0 junk_to_hide_inlet ARDUINO_TEST_RESET 2 5 9 1
12 -260736 -1 -1 0 1;
#X msg 35 106 0 \$1;
#X msg 70 106 1 \$1;
#X msg 105 106 2 \$1;
#X msg 202 307 set \$1 \$2 \$3;
#X msg 59 210 digitalIns \$1 \$2;
#X connect 1 0 0 0;
#X connect 1 1 2 0;
#X connect 2 0 9 0;
#X connect 3 0 6 0;
#X connect 4 0 7 0;
#X connect 5 0 8 0;
#X connect 6 0 10 0;
#X connect 7 0 10 0;
#X connect 8 0 10 0;
#X connect 9 0 0 0;
#X connect 10 0 1 0;
#X coords 0 -1 1 1 45 16 1 60 60;
#X restore 57 110 pd seri;
#X obj 54 168 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 57 173 send \$0-arduino;
#X text 54 31 You have to tell StandardFirmata to send you data from
the inputs. For Digital it is controller per 8-pin "port".;
#X connect 0 0 4 0;
#X connect 2 0 0 0;
#X restore 169 227 pd old digital controls(deprecated);
#N canvas 517 261 426 208 old 0;
#X msg 35 111 analogIns 0 0;
#N canvas 162 133 610 460 serin 0;
#X obj 59 337 outlet;
#X obj 59 266 trigger bang anything;
#X obj 201 286 list;
#X obj 60 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 0 5 9
1 12 -262130 -1 -1 0 1;
#X obj 75 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 1 5 9
1 12 -262130 -1 -1 0 1;
#X obj 90 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 2 5 9
1 12 -262130 -1 -1 0 1;
#X obj 105 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 3 5 9
1 12 -262130 -1 -1 0 1;
#X obj 120 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 4 5 9
1 12 -262130 -1 -1 0 1;
#X obj 135 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 5 5 9
1 12 -262130 -1 -1 0 1;
#X obj 150 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 6 5 9
1 12 -262130 -1 -1 0 1;
#X obj 165 61 tgl 15 0 junk_to_hide_inlet junk_to_hide_outlet 7 5 9
1 12 -262130 -1 -1 0 1;
#X msg 59 210 analogIns \$1 \$2;
#X msg 35 106 0 \$1;
#X msg 70 106 1 \$1;
#X msg 105 106 2 \$1;
#X msg 140 106 3 \$1;
#X msg 175 106 4 \$1;
#X msg 210 106 5 \$1;
#X msg 245 106 6 \$1;
#X msg 280 106 7 \$1;
#X msg 202 307 set \$1 \$2 \$3;
#X connect 1 0 0 0;
#X connect 1 1 2 0;
#X connect 2 0 20 0;
#X connect 3 0 12 0;
#X connect 4 0 13 0;
#X connect 5 0 14 0;
#X connect 6 0 15 0;
#X connect 7 0 16 0;
#X connect 8 0 17 0;
#X connect 9 0 18 0;
#X connect 10 0 19 0;
#X connect 11 0 1 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 14 0 11 0;
#X connect 15 0 11 0;
#X connect 16 0 11 0;
#X connect 17 0 11 0;
#X connect 18 0 11 0;
#X connect 19 0 11 0;
#X connect 20 0 0 0;
#X coords 0 -1 1 1 120 16 1 60 60;
#X restore 35 91 pd serin;
#X text 34 74 which analogIns to enable:;
#X obj 32 154 cnv 15 100 26 empty empty empty 20 12 0 14 -257985 -66577
0;
#X obj 35 159 send \$0-arduino;
#X text 33 25 You have to tell StandardFirmata to send you data from
the inputs. For analog \, its controlled per-pin.;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X restore 177 482 pd old analog controls(deprecated);
#X obj 20 290 cnv 15 360 80 empty empty empty 20 12 0 14 -261234 -66577
0;
#X msg 81 422 pinMode 16 0;
#X text 19 375 define AnalogPin A0;
#X text 19 395 as input;
#X text 20 421 disable;
#X text 14 104 define DigitalPin 10 as;
#X text 14 151 output;
#X text 14 127 input;
#X text 17 538 define DigitalPin 10 for;
#X text 17 560 pwm output;
#X text 15 579 servo output;
#X text 23 290 NOTE: the AnalogPins are adressed by numbers and not
as A0-A7. Due to Arduinos naming scheme the AnalogPin f.e. A0 on a
Diecimila is adressed by the pins number \, here 16 A1 is the pin 17
\, A2 = 18 and so on.;
#N canvas 862 291 436 306 Pin 0;
#X obj 40 30 cnv 15 350 250 empty empty empty 20 12 0 14 -67964 -66577
0;
#X obj 118 32 tgl 15 0 empty empty 15 0 23 1 9 -162280 -1 -191407 0
1;
#X obj 152 32 tgl 15 0 empty empty 13 0 23 1 9 -262144 -262144 -262144
0 1;
#X obj 169 32 tgl 15 0 empty empty 12 0 23 1 9 -262144 -262144 -262144
0 1;
#X obj 203 32 tgl 15 0 empty empty 10 0 23 1 9 -262144 -262144 -262144
0 1;
#X obj 186 32 tgl 15 0 empty empty 11 0 23 1 9 -262144 -262144 -262144
0 1;
#X obj 220 32 tgl 15 0 empty empty 9 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 237 32 tgl 15 0 empty empty 8 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 254 32 tgl 15 0 empty empty 7 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 271 32 tgl 15 0 empty empty 6 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 288 32 tgl 15 0 empty empty 5 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 305 32 tgl 15 0 empty empty 4 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 322 32 tgl 15 0 empty empty 3 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 339 32 tgl 15 0 empty empty 2 5 23 1 9 -262144 -262144 -262144
0 1;
#X obj 356 32 tgl 15 0 empty empty 1 5 23 1 9 -162280 -262144 -191407
0 1;
#X obj 373 32 tgl 15 0 empty empty 0 5 23 1 9 -162280 -262144 -191407
0 1;
#X text 375 56 R;
#X text 375 67 X;
#X text 359 56 T;
#X text 359 67 X;
#X obj 135 32 tgl 15 0 empty empty 14 0 23 1 9 -162280 -1 -191407 0
1;
#X text 137 56 G;
#X text 137 67 N;
#X text 137 78 D;
#X text 120 57 A;
#X text 120 68 R;
#X text 120 78 E;
#X text 120 88 F;
#X obj 288 263 tgl 15 0 empty empty 16 0 -6 1 9 -262144 -262144 -262144
0 1;
#X obj 305 263 tgl 15 0 empty empty 17 0 -6 1 9 -262144 -262144 -262144
0 1;
#X obj 322 263 tgl 15 0 empty empty 18 0 -6 1 9 -262144 -262144 -262144
0 1;
#X obj 339 263 tgl 15 0 empty empty 19 0 -6 1 9 -262144 -262144 -262144
0 1;
#X obj 356 263 tgl 15 0 empty empty 20 0 -6 1 9 -262144 -262144 -262144
0 1;
#X obj 373 263 tgl 15 0 empty empty 21 0 -6 1 9 -262144 -262144 -262144
0 1;
#X text 232 95 Digital;
#X text 187 56 P;
#X text 188 67 W;
#X text 187 78 M;
#X text 205 56 P;
#X text 206 67 W;
#X text 205 78 M;
#X text 224 56 P;
#X text 225 67 W;
#X text 224 78 M;
#X text 274 56 P;
#X text 275 67 W;
#X text 274 78 M;
#X text 291 56 P;
#X text 292 67 W;
#X text 291 78 M;
#X text 325 56 P;
#X text 326 67 W;
#X text 325 78 M;
#X text 310 221 Analog in;
#X obj 248 263 tgl 15 0 empty empty empty 0 -6 1 9 -261234 -262144
-262144 0 1;
#X text 249 229 V;
#X text 250 239 i;
#X text 250 247 n;
#X obj 231 263 tgl 15 0 empty empty empty 0 23 1 9 -162280 -1 -191407
0 1;
#X text 232 225 G;
#X text 232 236 N;
#X text 232 247 D;
#X obj 214 263 tgl 15 0 empty empty empty 0 23 1 9 -162280 -1 -191407
0 1;
#X text 215 225 G;
#X text 215 236 N;
#X text 215 247 D;
#X obj 197 263 tgl 15 0 empty empty empty 0 -6 1 9 -261234 -262144
-262144 0 1;
#X text 198 236 5;
#X text 198 246 V;
#X obj 180 263 tgl 15 0 empty empty empty 0 -6 1 9 -261234 -262144
-262144 0 1;
#X text 181 246 V;
#X text 181 236 3;
#X text 181 226 3;
#X obj 163 263 tgl 15 0 empty empty empty 0 23 1 9 -162280 -1 -191407
0 1;
#X text 164 247 T;
#X text 164 225 R;
#X text 164 236 S;
#X text 286 236 A0;
#X text 304 236 A1;
#X text 321 236 A2;
#X text 337 236 A3;
#X text 354 236 A4;
#X text 371 236 A5;
#X text 52 142 White letters are showing the Pin Numbering Map for
;
#X text 51 157 Arduino UNO \, Duemilanove \, Nano \, Diecimila...;
#X restore 140 349 pd Pin Numbering Map;
#X text 23 348 take a look at the;
#X connect 1 0 15 0;
#X connect 2 0 23 0;
#X connect 3 0 23 0;
#X connect 4 0 15 0;
#X connect 10 0 23 0;
#X connect 11 0 23 0;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X connect 24 0 26 0;
#X connect 27 0 26 0;
#X connect 31 0 26 0;
#X restore 74 337 pd PINMODE;
#X text 143 336 <- first \, you need to set the pinMode;
#X text 482 142 argument sets serial port;
#N canvas 0 0 450 300 2do 0;
#X text 53 58 on osx port opens automatically;
#X restore 349 198 pd 2do;
#X connect 1 0 16 0;
#X connect 2 0 16 0;
#X connect 3 0 16 0;
#X connect 5 0 16 0;
#X connect 9 0 16 0;
#X connect 12 0 16 0;
#X connect 13 0 12 0;
#X connect 37 0 41 0;
#X connect 38 0 37 0;
#X connect 39 0 41 0;
#X connect 48 0 54 0;
#X connect 48 1 49 0;
#X connect 48 1 50 0;
#X connect 52 0 48 0;
